# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-02-18 05:02
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tournament', '0013_auto_20180215_1302'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='tournamentapplication',
            name='text',
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='additional_info',
            field=models.TextField(default=1, help_text='More information about tournament', verbose_name='Additional info'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='additional_info_link',
            field=models.URLField(blank=True, null=True, verbose_name='Link to additional tournament information'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='address',
            field=models.TextField(default=1, help_text='How to reach your tournament venue', verbose_name='Address'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='allow_to_save_data',
            field=models.BooleanField(default=1, help_text='I allow to store my personal data'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='city',
            field=models.CharField(default=1, max_length=255, verbose_name='City'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='end_date',
            field=models.CharField(blank=True, help_text='Leave empty if tournament has one day', max_length=255, null=True, verbose_name='End date'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='entry_fee',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Leave empty if it is free tournament', null=True, verbose_name='Entry fee'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='max_number_of_participants',
            field=models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Max number of participants'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='organizer_additional_contact',
            field=models.CharField(blank=True, help_text='Email, link to vk or something else', max_length=255, null=True, verbose_name='Organizer additional contact'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='organizer_name',
            field=models.CharField(default=1, max_length=255, verbose_name='Organizer name'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='organizer_phone',
            field=models.CharField(default=1, max_length=255, verbose_name='Organizer phone'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='pantheon_needed',
            field=models.PositiveSmallIntegerField(choices=[[0, 'No'], [1, 'Yes']], default=1, verbose_name='Pantheon needed'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='referee_additional_contact',
            field=models.CharField(blank=True, help_text='Email, link to vk or something else', max_length=255, null=True, verbose_name='Referee additional contact'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='referee_english',
            field=models.PositiveSmallIntegerField(choices=[[0, 'No'], [1, 'Yes']], default=1, verbose_name='Referee english'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='referee_name',
            field=models.CharField(default=1, max_length=255, verbose_name='Referee name'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='referee_phone',
            field=models.CharField(default=1, max_length=255, verbose_name='Referee phone'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='registration_type',
            field=models.PositiveSmallIntegerField(choices=[[0, 'Open'], [1, 'Closed'], [2, 'Limited']], default=0, verbose_name='Registration type'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='rules',
            field=models.PositiveSmallIntegerField(choices=[[0, 'EMA'], [1, 'WRC'], [2, 'JPML-A'], [3, 'JPML-B'], [4, 'Other']], default=0, verbose_name='Tournament rules'),
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='start_date',
            field=models.CharField(default=1, max_length=255, verbose_name='Start date'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='tournament_name',
            field=models.CharField(default=1, max_length=255, verbose_name='Tournament name'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tournamentapplication',
            name='tournament_type',
            field=models.PositiveSmallIntegerField(choices=[[0, 'CRR'], [1, 'RR'], [2, 'EMA']], default=0, verbose_name='Tournament type'),
        ),
    ]
