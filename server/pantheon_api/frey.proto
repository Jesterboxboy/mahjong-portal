syntax = "proto3";

package Common;

import "atoms.proto";

service Frey {
  rpc RequestRegistration(Auth_RequestRegistration_Payload) returns (Auth_RequestRegistration_Response);
  rpc ApproveRegistration(Auth_ApproveRegistration_Payload) returns (Auth_ApproveRegistration_Response);
  rpc Authorize(Auth_Authorize_Payload) returns (Auth_Authorize_Response);
  rpc QuickAuthorize(Auth_QuickAuthorize_Payload) returns (Auth_QuickAuthorize_Response);
  rpc Me(Auth_Me_Payload) returns (Auth_Me_Response);
  rpc ChangePassword(Auth_ChangePassword_Payload) returns (Auth_ChangePassword_Response);
  rpc RequestResetPassword(Auth_RequestResetPassword_Payload) returns (Auth_RequestResetPassword_Response);
  rpc ApproveResetPassword(Auth_ApproveResetPassword_Payload) returns (Auth_ApproveResetPassword_Response);
  rpc GetAccessRules(Access_GetAccessRules_Payload) returns (Access_GetAccessRules_Response);
  rpc GetRuleValue(Access_GetRuleValue_Payload) returns (Access_GetRuleValue_Response);
  rpc UpdatePersonalInfo(Persons_UpdatePersonalInfo_Payload) returns (Generic_Success_Response);
  rpc GetPersonalInfo(Persons_GetPersonalInfo_Payload) returns (Persons_GetPersonalInfo_Response);
  rpc FindByTenhouIds(Persons_FindByTenhouIds_Payload) returns (Persons_FindByTenhouIds_Response);
  rpc FindByTitle(Persons_FindByTitle_Payload) returns (Persons_FindByTitle_Response);
  rpc GetGroups(Persons_GetGroups_Payload) returns (Persons_GetGroups_Response);
  rpc GetEventAdmins(Access_GetEventAdmins_Payload) returns (Access_GetEventAdmins_Response);

  // admin
  rpc GetSuperadminFlag(Access_GetSuperadminFlag_Payload) returns (Access_GetSuperadminFlag_Response);
  rpc GetOwnedEventIds(Access_GetOwnedEventIds_Payload) returns (Access_GetOwnedEventIds_Response);
  rpc GetRulesList(Access_GetRulesList_Payload) returns (Access_GetRulesList_Response);
  rpc GetAllEventRules(Access_GetAllEventRules_Payload) returns (Access_GetAllEventRules_Response);
  rpc GetPersonAccess(Access_GetPersonAccess_Payload) returns (Access_GetPersonAccess_Response);
  rpc GetGroupAccess(Access_GetGroupAccess_Payload) returns (Access_GetGroupAccess_Response);
  rpc GetAllPersonAccess(Access_GetAllPersonAccess_Payload) returns (Access_GetAllPersonAccess_Response);
  rpc GetAllGroupAccess(Access_GetAllGroupAccess_Payload) returns (Access_GetAllGroupAccess_Response);
  rpc AddRuleForPerson(Access_AddRuleForPerson_Payload) returns (Access_AddRuleForPerson_Response);
  rpc AddRuleForGroup(Access_AddRuleForGroup_Payload) returns (Access_AddRuleForGroup_Response);
  rpc UpdateRuleForPerson(Access_UpdateRuleForPerson_Payload) returns (Generic_Success_Response);
  rpc UpdateRuleForGroup(Access_UpdateRuleForGroup_Payload) returns (Generic_Success_Response);
  rpc DeleteRuleForPerson(Access_DeleteRuleForPerson_Payload) returns (Generic_Success_Response);
  rpc DeleteRuleForGroup(Access_DeleteRuleForGroup_Payload) returns (Generic_Success_Response);
  rpc ClearAccessCache(Access_ClearAccessCache_Payload) returns (Generic_Success_Response);
  rpc CreateAccount(Persons_CreateAccount_Payload) returns (Persons_CreateAccount_Response);
  rpc CreateGroup(Persons_CreateGroup_Payload) returns (Persons_CreateGroup_Response);
  rpc UpdateGroup(Persons_UpdateGroup_Payload) returns (Generic_Success_Response);
  rpc DeleteGroup(Persons_DeleteGroup_Payload) returns (Generic_Success_Response);
  rpc AddPersonToGroup(Persons_AddPersonToGroup_Payload) returns (Generic_Success_Response);
  rpc RemovePersonFromGroup(Persons_RemovePersonFromGroup_Payload) returns (Generic_Success_Response);
  rpc GetPersonsOfGroup(Persons_GetPersonsOfGroup_Payload) returns (Persons_GetPersonsOfGroup_Response);
  rpc GetGroupsOfPerson(Persons_GetGroupsOfPerson_Payload) returns (Persons_GetGroupsOfPerson_Response);

  // superadmin: this should be covered with some bootstrap authenthication, TODO
  rpc AddSystemWideRuleForPerson(Access_AddSystemWideRuleForPerson_Payload) returns (Access_AddSystemWideRuleForPerson_Response);
  rpc AddSystemWideRuleForGroup(Access_AddSystemWideRuleForGroup_Payload) returns (Access_AddSystemWideRuleForGroup_Response);
}

message Auth_RequestRegistration_Payload {
  string email = 1;
  string title = 2;
  string password = 3;
  bool sendEmail = 4;
}

message Auth_RequestRegistration_Response {
  string approvalCode = 1;
}

message Auth_ApproveRegistration_Payload {
  string approvalCode = 1;
}

message Auth_ApproveRegistration_Response {
  int32 personId = 1;
}

message Auth_Authorize_Payload {
  string email = 1;
  string password = 2;
}

message Auth_Authorize_Response {
  int32 personId = 1;
  string authToken = 2;
}

message Auth_QuickAuthorize_Payload {
  int32 personId = 1;
  string authToken = 2;
}

message Auth_QuickAuthorize_Response {
  bool authSuccess = 1;
}

message Auth_Me_Payload {
  int32 personId = 1;
  string authToken = 2;
}

message Auth_Me_Response {
  int32 personId = 1;
  string country = 2;
  string city = 3;
  string email = 4;
  string phone = 5;
  string tenhouId = 6;
  string title = 7;
  repeated int32 groups = 8;
}

message Auth_ChangePassword_Payload {
  string email = 1;
  string password = 2;
  string newPassword = 3;
}

message Auth_ChangePassword_Response {
  string authToken = 1;
}

message Auth_RequestResetPassword_Payload {
  string email = 1;
  bool sendEmail = 2;
}

message Auth_RequestResetPassword_Response {
  string resetToken = 1;
}

message Auth_ApproveResetPassword_Payload {
  string email = 1;
  string resetToken = 2;
}

message Auth_ApproveResetPassword_Response {
  string newTmpPassword = 1;
}

message Access_GetAccessRules_Payload {
  int32 personId = 1;
  int32 eventId = 2;
}

message Access_GetAccessRules_Response {
  AccessRules rules = 1;
}

message Access_GetRuleValue_Payload {
  int32 personId = 1;
  int32 eventId = 2;
  string ruleName = 3;
}

message Access_GetRuleValue_Response {
  RuleValue value = 1;
}

message Access_GetEventAdmins_Payload {
  int32 eventId = 1;
}

message Access_GetEventAdmins_Response {
  repeated EventAdmin admins = 1;
}

message Access_GetSuperadminFlag_Payload {
  int32 personId = 1;
}

message Access_GetSuperadminFlag_Response {
  bool isAdmin = 1;
}

message Access_GetOwnedEventIds_Payload {
  int32 personId = 1;
}

message Access_GetOwnedEventIds_Response {
  repeated int32 eventIds = 1;
}

message Access_GetRulesList_Payload {}

message Access_GetRulesList_Response {
  repeated RuleListItem items = 1;
}

message Access_GetAllEventRules_Payload {
  int32 eventId = 1;
}

message Access_GetAllEventRules_Response {
  repeated EventRuleListItem personRules = 1;
  repeated EventRuleListItem groupRules = 2;
}

message Access_GetPersonAccess_Payload {
  int32 personId = 1;
  int32 eventId = 2;
}

message Access_GetPersonAccess_Response {
  AccessRules rules = 1;
}

message Access_GetGroupAccess_Payload {
  int32 groupId = 1;
  int32 eventId = 2;
}

message Access_GetGroupAccess_Response {
  AccessRules rules = 1;
}

message Access_GetAllPersonAccess_Payload {
  int32 personId = 1;
}

message Access_GetAllPersonAccess_Response {
  map<int32, RuleListItemExMap> rulesByEvent = 1;
}

message Access_GetAllGroupAccess_Payload {
  int32 groupId = 1;
}

message Access_GetAllGroupAccess_Response {
  map<int32, RuleListItemExMap> rulesByEvent = 1;
}

message Access_AddRuleForPerson_Payload {
  string ruleName = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
  int32 personId = 4;
  int32 eventId = 5;
}

message Access_AddRuleForPerson_Response {
  int32 ruleId = 1;
}

message Access_AddRuleForGroup_Payload {
  string ruleName = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
  int32 groupId = 4;
  int32 eventId = 5;
}

message Access_AddRuleForGroup_Response {
  int32 ruleId = 1;
}

message Access_UpdateRuleForPerson_Payload {
  int32 ruleId = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
}

message Access_UpdateRuleForGroup_Payload {
  int32 ruleId = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
}

message Access_DeleteRuleForPerson_Payload {
  int32 ruleId = 1;
}

message Access_DeleteRuleForGroup_Payload {
  int32 ruleId = 1;
}

message Access_ClearAccessCache_Payload {
  int32 personId = 1;
  int32 eventId = 2;
}

message Access_AddSystemWideRuleForPerson_Payload {
  string ruleName = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
  int32 personId = 4;
}

message Access_AddSystemWideRuleForPerson_Response {
  int32 ruleId = 1;
}

message Access_AddSystemWideRuleForGroup_Payload {
  string ruleName = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
  int32 groupId = 4;
}

message Access_AddSystemWideRuleForGroup_Response {
  int32 ruleId = 1;
}

message Persons_CreateAccount_Payload {
  string email = 1;
  string password = 2;
  string title = 3;
  string city = 4;
  string phone = 5;
  string tenhouId = 6;
  string country = 7;
}

message Persons_CreateAccount_Response {
  int32 personId = 1;
}

message Persons_CreateGroup_Payload {
  string title = 1;
  string description = 2;
  string color = 3;
}

message Persons_CreateGroup_Response {
  int32 groupId = 1;
}

message Persons_UpdateGroup_Payload {
  int32 groupId = 1;
  string title = 2;
  string description = 3;
  string color = 4;
}

message Persons_DeleteGroup_Payload {
  int32 groupId = 1;
}

message Persons_AddPersonToGroup_Payload {
  int32 personId = 1;
  int32 groupId = 2;
}

message Persons_RemovePersonFromGroup_Payload {
  int32 personId = 1;
  int32 groupId = 2;
}

message Persons_GetPersonsOfGroup_Payload {
  int32 groupId = 1;
}

message Persons_GetPersonsOfGroup_Response {
  repeated Person persons = 1;
}

message Persons_GetGroupsOfPerson_Payload {
  int32 personId = 1;
}

message Persons_GetGroupsOfPerson_Response {
  repeated Group groups = 1;
}

message Persons_UpdatePersonalInfo_Payload {
  int32 id = 1;
  string title = 2;
  string country = 3;
  string city = 4;
  string email = 5;
  string phone = 6;
  string tenhouId = 7;
}

message Persons_GetPersonalInfo_Payload {
  repeated int32 ids = 1;
}

message Persons_GetPersonalInfo_Response {
  repeated PersonEx persons = 1;
}

message Persons_FindByTenhouIds_Payload {
  repeated string ids = 1;
}

message Persons_FindByTenhouIds_Response {
  repeated PersonEx persons = 1;
}

message Persons_FindByTitle_Payload {
  string query = 1;
}

message Persons_FindByTitle_Response {
  repeated Person persons = 1;
}

message Persons_GetGroups_Payload {
  repeated int32 ids = 1;
}

message Persons_GetGroups_Response {
  repeated Group groups = 1;
}
